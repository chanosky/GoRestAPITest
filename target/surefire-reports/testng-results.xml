<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="31" passed="31" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-28T10:59:16 PST" name="Go Rest API Suite" finished-at="2025-01-28T10:59:52 PST" duration-ms="35349">
    <groups>
      <group name="alltests">
        <method signature="GoRestAPICreateUserTests.TC01CreateAndVerifyUser()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC01CreateAndVerifyUser" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC02CreateUserWithInvalidEmail()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC02CreateUserWithInvalidEmail" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC03CreateUserWithInvalidStatus()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC03CreateUserWithInvalidStatus" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC04CreateUserWithInvalidGender()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC04CreateUserWithInvalidGender" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC05CreateUserWithBlankEmail()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC05CreateUserWithBlankEmail" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC06CreateUserWithBlankStatus()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC06CreateUserWithBlankStatus" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC07CreateUserWithBlankGender()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC07CreateUserWithBlankGender" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC08CreateUserWithBlankName()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC08CreateUserWithBlankName" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC09CreateUserWithMissingRequiredFields()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC09CreateUserWithMissingRequiredFields" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC10CreateUserWithInvalidToken()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC10CreateUserWithInvalidToken" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC11CreateUserWithUnauthorizedUser()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC11CreateUserWithUnauthorizedUser" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC12CreateUserWithNameMoreThan200Char()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC12CreateUserWithNameMoreThan200Char" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC13CreateUserWithEmailMoreThan200Char()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC13CreateUserWithEmailMoreThan200Char" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC14CreateUserWithGenderMoreThan200Char()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC14CreateUserWithGenderMoreThan200Char" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC15CreateUserWithStatusMoreThan200Char()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC15CreateUserWithStatusMoreThan200Char" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPIDeleteUserTests.TC01DeleteExistingUser()[pri:0, instance:Tests.GoRestAPIDeleteUserTests@bccb269]" name="TC01DeleteExistingUser" class="Tests.GoRestAPIDeleteUserTests"/>
        <method signature="GoRestAPIDeleteUserTests.TC02DeleteNonExistingUser()[pri:0, instance:Tests.GoRestAPIDeleteUserTests@bccb269]" name="TC02DeleteNonExistingUser" class="Tests.GoRestAPIDeleteUserTests"/>
        <method signature="GoRestAPIDeleteUserTests.TC03DeleteUserWithUnauthorizedUser()[pri:0, instance:Tests.GoRestAPIDeleteUserTests@bccb269]" name="TC03DeleteUserWithUnauthorizedUser" class="Tests.GoRestAPIDeleteUserTests"/>
        <method signature="GoRestAPIDeleteUserTests.TC04DeleteUserWithInvalidToken()[pri:0, instance:Tests.GoRestAPIDeleteUserTests@bccb269]" name="TC04DeleteUserWithInvalidToken" class="Tests.GoRestAPIDeleteUserTests"/>
        <method signature="GoRestAPIGetUserTests.TC01VerifyUserDataById()[pri:0, instance:Tests.GoRestAPIGetUserTests@52bf72b5]" name="TC01VerifyUserDataById" class="Tests.GoRestAPIGetUserTests"/>
        <method signature="GoRestAPIGetUserTests.TC02VerifyUserDataByInvalidUserId()[pri:0, instance:Tests.GoRestAPIGetUserTests@52bf72b5]" name="TC02VerifyUserDataByInvalidUserId" class="Tests.GoRestAPIGetUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC01UpdateExistingUser()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC01UpdateExistingUser" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC02UpdateUserUsingBlankData()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC02UpdateUserUsingBlankData" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC03UpdateUserUsingInvalidData()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC03UpdateUserUsingInvalidData" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC04UpdateNonExistingUser()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC04UpdateNonExistingUser" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC05UpdateExistingUserWithInvalidToken()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC05UpdateExistingUserWithInvalidToken" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC06UpdateExistingUserWithUnauthorizedUser()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC06UpdateExistingUserWithUnauthorizedUser" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC07UpdateExistingUserWithNameMoreThan200Char()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC07UpdateExistingUserWithNameMoreThan200Char" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC08UpdateExistingUserWithEmailMoreThan200Char()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC08UpdateExistingUserWithEmailMoreThan200Char" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC09UpdateExistingUserWithGenderMoreThan200Char()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC09UpdateExistingUserWithGenderMoreThan200Char" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC10UpdateExistingUserWithStatusMoreThan200Char()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC10UpdateExistingUserWithStatusMoreThan200Char" class="Tests.GoRestAPIUpdateUserTests"/>
      </group> <!-- alltests -->
      <group name="negative">
        <method signature="GoRestAPICreateUserTests.TC02CreateUserWithInvalidEmail()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC02CreateUserWithInvalidEmail" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC03CreateUserWithInvalidStatus()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC03CreateUserWithInvalidStatus" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC04CreateUserWithInvalidGender()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC04CreateUserWithInvalidGender" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC05CreateUserWithBlankEmail()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC05CreateUserWithBlankEmail" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC06CreateUserWithBlankStatus()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC06CreateUserWithBlankStatus" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC07CreateUserWithBlankGender()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC07CreateUserWithBlankGender" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC08CreateUserWithBlankName()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC08CreateUserWithBlankName" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC09CreateUserWithMissingRequiredFields()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC09CreateUserWithMissingRequiredFields" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC10CreateUserWithInvalidToken()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC10CreateUserWithInvalidToken" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC11CreateUserWithUnauthorizedUser()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC11CreateUserWithUnauthorizedUser" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC12CreateUserWithNameMoreThan200Char()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC12CreateUserWithNameMoreThan200Char" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC13CreateUserWithEmailMoreThan200Char()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC13CreateUserWithEmailMoreThan200Char" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC14CreateUserWithGenderMoreThan200Char()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC14CreateUserWithGenderMoreThan200Char" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC15CreateUserWithStatusMoreThan200Char()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC15CreateUserWithStatusMoreThan200Char" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPIDeleteUserTests.TC02DeleteNonExistingUser()[pri:0, instance:Tests.GoRestAPIDeleteUserTests@bccb269]" name="TC02DeleteNonExistingUser" class="Tests.GoRestAPIDeleteUserTests"/>
        <method signature="GoRestAPIDeleteUserTests.TC03DeleteUserWithUnauthorizedUser()[pri:0, instance:Tests.GoRestAPIDeleteUserTests@bccb269]" name="TC03DeleteUserWithUnauthorizedUser" class="Tests.GoRestAPIDeleteUserTests"/>
        <method signature="GoRestAPIDeleteUserTests.TC04DeleteUserWithInvalidToken()[pri:0, instance:Tests.GoRestAPIDeleteUserTests@bccb269]" name="TC04DeleteUserWithInvalidToken" class="Tests.GoRestAPIDeleteUserTests"/>
        <method signature="GoRestAPIGetUserTests.TC02VerifyUserDataByInvalidUserId()[pri:0, instance:Tests.GoRestAPIGetUserTests@52bf72b5]" name="TC02VerifyUserDataByInvalidUserId" class="Tests.GoRestAPIGetUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC02UpdateUserUsingBlankData()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC02UpdateUserUsingBlankData" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC03UpdateUserUsingInvalidData()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC03UpdateUserUsingInvalidData" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC04UpdateNonExistingUser()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC04UpdateNonExistingUser" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC05UpdateExistingUserWithInvalidToken()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC05UpdateExistingUserWithInvalidToken" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC06UpdateExistingUserWithUnauthorizedUser()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC06UpdateExistingUserWithUnauthorizedUser" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC07UpdateExistingUserWithNameMoreThan200Char()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC07UpdateExistingUserWithNameMoreThan200Char" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC08UpdateExistingUserWithEmailMoreThan200Char()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC08UpdateExistingUserWithEmailMoreThan200Char" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC09UpdateExistingUserWithGenderMoreThan200Char()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC09UpdateExistingUserWithGenderMoreThan200Char" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC10UpdateExistingUserWithStatusMoreThan200Char()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC10UpdateExistingUserWithStatusMoreThan200Char" class="Tests.GoRestAPIUpdateUserTests"/>
      </group> <!-- negative -->
      <group name="get">
        <method signature="GoRestAPIGetUserTests.TC01VerifyUserDataById()[pri:0, instance:Tests.GoRestAPIGetUserTests@52bf72b5]" name="TC01VerifyUserDataById" class="Tests.GoRestAPIGetUserTests"/>
        <method signature="GoRestAPIGetUserTests.TC02VerifyUserDataByInvalidUserId()[pri:0, instance:Tests.GoRestAPIGetUserTests@52bf72b5]" name="TC02VerifyUserDataByInvalidUserId" class="Tests.GoRestAPIGetUserTests"/>
      </group> <!-- get -->
      <group name="update">
        <method signature="GoRestAPIUpdateUserTests.TC01UpdateExistingUser()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC01UpdateExistingUser" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC02UpdateUserUsingBlankData()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC02UpdateUserUsingBlankData" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC03UpdateUserUsingInvalidData()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC03UpdateUserUsingInvalidData" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC04UpdateNonExistingUser()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC04UpdateNonExistingUser" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC05UpdateExistingUserWithInvalidToken()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC05UpdateExistingUserWithInvalidToken" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC06UpdateExistingUserWithUnauthorizedUser()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC06UpdateExistingUserWithUnauthorizedUser" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC07UpdateExistingUserWithNameMoreThan200Char()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC07UpdateExistingUserWithNameMoreThan200Char" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC08UpdateExistingUserWithEmailMoreThan200Char()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC08UpdateExistingUserWithEmailMoreThan200Char" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC09UpdateExistingUserWithGenderMoreThan200Char()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC09UpdateExistingUserWithGenderMoreThan200Char" class="Tests.GoRestAPIUpdateUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC10UpdateExistingUserWithStatusMoreThan200Char()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC10UpdateExistingUserWithStatusMoreThan200Char" class="Tests.GoRestAPIUpdateUserTests"/>
      </group> <!-- update -->
      <group name="create">
        <method signature="GoRestAPICreateUserTests.TC01CreateAndVerifyUser()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC01CreateAndVerifyUser" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC02CreateUserWithInvalidEmail()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC02CreateUserWithInvalidEmail" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC03CreateUserWithInvalidStatus()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC03CreateUserWithInvalidStatus" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC04CreateUserWithInvalidGender()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC04CreateUserWithInvalidGender" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC05CreateUserWithBlankEmail()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC05CreateUserWithBlankEmail" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC06CreateUserWithBlankStatus()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC06CreateUserWithBlankStatus" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC07CreateUserWithBlankGender()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC07CreateUserWithBlankGender" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC08CreateUserWithBlankName()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC08CreateUserWithBlankName" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC09CreateUserWithMissingRequiredFields()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC09CreateUserWithMissingRequiredFields" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC10CreateUserWithInvalidToken()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC10CreateUserWithInvalidToken" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC11CreateUserWithUnauthorizedUser()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC11CreateUserWithUnauthorizedUser" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC12CreateUserWithNameMoreThan200Char()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC12CreateUserWithNameMoreThan200Char" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC13CreateUserWithEmailMoreThan200Char()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC13CreateUserWithEmailMoreThan200Char" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC14CreateUserWithGenderMoreThan200Char()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC14CreateUserWithGenderMoreThan200Char" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPICreateUserTests.TC15CreateUserWithStatusMoreThan200Char()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC15CreateUserWithStatusMoreThan200Char" class="Tests.GoRestAPICreateUserTests"/>
      </group> <!-- create -->
      <group name="positive">
        <method signature="GoRestAPICreateUserTests.TC01CreateAndVerifyUser()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" name="TC01CreateAndVerifyUser" class="Tests.GoRestAPICreateUserTests"/>
        <method signature="GoRestAPIDeleteUserTests.TC01DeleteExistingUser()[pri:0, instance:Tests.GoRestAPIDeleteUserTests@bccb269]" name="TC01DeleteExistingUser" class="Tests.GoRestAPIDeleteUserTests"/>
        <method signature="GoRestAPIGetUserTests.TC01VerifyUserDataById()[pri:0, instance:Tests.GoRestAPIGetUserTests@52bf72b5]" name="TC01VerifyUserDataById" class="Tests.GoRestAPIGetUserTests"/>
        <method signature="GoRestAPIUpdateUserTests.TC01UpdateExistingUser()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" name="TC01UpdateExistingUser" class="Tests.GoRestAPIUpdateUserTests"/>
      </group> <!-- positive -->
      <group name="delete">
        <method signature="GoRestAPIDeleteUserTests.TC01DeleteExistingUser()[pri:0, instance:Tests.GoRestAPIDeleteUserTests@bccb269]" name="TC01DeleteExistingUser" class="Tests.GoRestAPIDeleteUserTests"/>
        <method signature="GoRestAPIDeleteUserTests.TC02DeleteNonExistingUser()[pri:0, instance:Tests.GoRestAPIDeleteUserTests@bccb269]" name="TC02DeleteNonExistingUser" class="Tests.GoRestAPIDeleteUserTests"/>
        <method signature="GoRestAPIDeleteUserTests.TC03DeleteUserWithUnauthorizedUser()[pri:0, instance:Tests.GoRestAPIDeleteUserTests@bccb269]" name="TC03DeleteUserWithUnauthorizedUser" class="Tests.GoRestAPIDeleteUserTests"/>
        <method signature="GoRestAPIDeleteUserTests.TC04DeleteUserWithInvalidToken()[pri:0, instance:Tests.GoRestAPIDeleteUserTests@bccb269]" name="TC04DeleteUserWithInvalidToken" class="Tests.GoRestAPIDeleteUserTests"/>
      </group> <!-- delete -->
    </groups>
    <test started-at="2025-01-28T10:59:16 PST" name="GoRest API Tests" finished-at="2025-01-28T10:59:52 PST" duration-ms="35349">
      <class name="Tests.GoRestAPIDeleteUserTests">
        <test-method signature="TC01DeleteExistingUser()[pri:0, instance:Tests.GoRestAPIDeleteUserTests@bccb269]" started-at="2025-01-28T10:59:34 PST" name="TC01DeleteExistingUser" finished-at="2025-01-28T10:59:35 PST" duration-ms="1597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC01DeleteExistingUser -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPIDeleteUserTests@bccb269]" started-at="2025-01-28T10:59:34 PST" name="setup" finished-at="2025-01-28T10:59:34 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPIDeleteUserTests@bccb269]" started-at="2025-01-28T10:59:35 PST" name="deleteUser" finished-at="2025-01-28T10:59:35 PST" duration-ms="291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method signature="TC02DeleteNonExistingUser()[pri:0, instance:Tests.GoRestAPIDeleteUserTests@bccb269]" started-at="2025-01-28T10:59:35 PST" name="TC02DeleteNonExistingUser" finished-at="2025-01-28T10:59:36 PST" duration-ms="451" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC02DeleteNonExistingUser -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPIDeleteUserTests@bccb269]" started-at="2025-01-28T10:59:35 PST" name="setup" finished-at="2025-01-28T10:59:35 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPIDeleteUserTests@bccb269]" started-at="2025-01-28T10:59:36 PST" name="deleteUser" finished-at="2025-01-28T10:59:36 PST" duration-ms="599" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method signature="TC03DeleteUserWithUnauthorizedUser()[pri:0, instance:Tests.GoRestAPIDeleteUserTests@bccb269]" started-at="2025-01-28T10:59:36 PST" name="TC03DeleteUserWithUnauthorizedUser" finished-at="2025-01-28T10:59:38 PST" duration-ms="1121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC03DeleteUserWithUnauthorizedUser -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPIDeleteUserTests@bccb269]" started-at="2025-01-28T10:59:36 PST" name="setup" finished-at="2025-01-28T10:59:36 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPIDeleteUserTests@bccb269]" started-at="2025-01-28T10:59:38 PST" name="deleteUser" finished-at="2025-01-28T10:59:38 PST" duration-ms="363" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPIDeleteUserTests@bccb269]" started-at="2025-01-28T10:59:38 PST" name="setup" finished-at="2025-01-28T10:59:38 PST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TC04DeleteUserWithInvalidToken()[pri:0, instance:Tests.GoRestAPIDeleteUserTests@bccb269]" started-at="2025-01-28T10:59:38 PST" name="TC04DeleteUserWithInvalidToken" finished-at="2025-01-28T10:59:39 PST" duration-ms="1012" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC04DeleteUserWithInvalidToken -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPIDeleteUserTests@bccb269]" started-at="2025-01-28T10:59:39 PST" name="deleteUser" finished-at="2025-01-28T10:59:40 PST" duration-ms="586" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
      </class> <!-- Tests.GoRestAPIDeleteUserTests -->
      <class name="Tests.GoRestAPIGetUserTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPIGetUserTests@52bf72b5]" started-at="2025-01-28T10:59:16 PST" name="setup" finished-at="2025-01-28T10:59:17 PST" duration-ms="243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TC01VerifyUserDataById()[pri:0, instance:Tests.GoRestAPIGetUserTests@52bf72b5]" started-at="2025-01-28T10:59:17 PST" name="TC01VerifyUserDataById" finished-at="2025-01-28T10:59:19 PST" duration-ms="2277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC01VerifyUserDataById -->
        <test-method signature="TC02VerifyUserDataByInvalidUserId()[pri:0, instance:Tests.GoRestAPIGetUserTests@52bf72b5]" started-at="2025-01-28T10:59:19 PST" name="TC02VerifyUserDataByInvalidUserId" finished-at="2025-01-28T10:59:20 PST" duration-ms="501" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC02VerifyUserDataByInvalidUserId -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPIGetUserTests@52bf72b5]" started-at="2025-01-28T10:59:19 PST" name="setup" finished-at="2025-01-28T10:59:19 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- Tests.GoRestAPIGetUserTests -->
      <class name="Tests.GoRestAPIUpdateUserTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:40 PST" name="setup" finished-at="2025-01-28T10:59:40 PST" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TC01UpdateExistingUser()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:40 PST" name="TC01UpdateExistingUser" finished-at="2025-01-28T10:59:40 PST" duration-ms="364" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC01UpdateExistingUser -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:40 PST" name="deleteUser" finished-at="2025-01-28T10:59:41 PST" duration-ms="492" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:41 PST" name="setup" finished-at="2025-01-28T10:59:41 PST" duration-ms="300" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TC02UpdateUserUsingBlankData()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:41 PST" name="TC02UpdateUserUsingBlankData" finished-at="2025-01-28T10:59:42 PST" duration-ms="374" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC02UpdateUserUsingBlankData -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:42 PST" name="deleteUser" finished-at="2025-01-28T10:59:42 PST" duration-ms="497" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:42 PST" name="setup" finished-at="2025-01-28T10:59:42 PST" duration-ms="300" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TC03UpdateUserUsingInvalidData()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:42 PST" name="TC03UpdateUserUsingInvalidData" finished-at="2025-01-28T10:59:43 PST" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC03UpdateUserUsingInvalidData -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:43 PST" name="deleteUser" finished-at="2025-01-28T10:59:43 PST" duration-ms="313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:43 PST" name="setup" finished-at="2025-01-28T10:59:44 PST" duration-ms="353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TC04UpdateNonExistingUser()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:44 PST" name="TC04UpdateNonExistingUser" finished-at="2025-01-28T10:59:44 PST" duration-ms="300" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC04UpdateNonExistingUser -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:44 PST" name="deleteUser" finished-at="2025-01-28T10:59:44 PST" duration-ms="334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:44 PST" name="setup" finished-at="2025-01-28T10:59:44 PST" duration-ms="293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TC05UpdateExistingUserWithInvalidToken()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:44 PST" name="TC05UpdateExistingUserWithInvalidToken" finished-at="2025-01-28T10:59:45 PST" duration-ms="310" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC05UpdateExistingUserWithInvalidToken -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:45 PST" name="deleteUser" finished-at="2025-01-28T10:59:45 PST" duration-ms="484" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:45 PST" name="setup" finished-at="2025-01-28T10:59:46 PST" duration-ms="352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TC06UpdateExistingUserWithUnauthorizedUser()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:46 PST" name="TC06UpdateExistingUserWithUnauthorizedUser" finished-at="2025-01-28T10:59:46 PST" duration-ms="289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC06UpdateExistingUserWithUnauthorizedUser -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:46 PST" name="deleteUser" finished-at="2025-01-28T10:59:46 PST" duration-ms="309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:46 PST" name="setup" finished-at="2025-01-28T10:59:47 PST" duration-ms="345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TC07UpdateExistingUserWithNameMoreThan200Char()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:47 PST" name="TC07UpdateExistingUserWithNameMoreThan200Char" finished-at="2025-01-28T10:59:47 PST" duration-ms="349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC07UpdateExistingUserWithNameMoreThan200Char -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:47 PST" name="deleteUser" finished-at="2025-01-28T10:59:47 PST" duration-ms="536" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:47 PST" name="setup" finished-at="2025-01-28T10:59:48 PST" duration-ms="555" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TC08UpdateExistingUserWithEmailMoreThan200Char()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:48 PST" name="TC08UpdateExistingUserWithEmailMoreThan200Char" finished-at="2025-01-28T10:59:48 PST" duration-ms="463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC08UpdateExistingUserWithEmailMoreThan200Char -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:48 PST" name="deleteUser" finished-at="2025-01-28T10:59:49 PST" duration-ms="334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:49 PST" name="setup" finished-at="2025-01-28T10:59:50 PST" duration-ms="929" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TC09UpdateExistingUserWithGenderMoreThan200Char()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:50 PST" name="TC09UpdateExistingUserWithGenderMoreThan200Char" finished-at="2025-01-28T10:59:50 PST" duration-ms="310" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC09UpdateExistingUserWithGenderMoreThan200Char -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:50 PST" name="deleteUser" finished-at="2025-01-28T10:59:50 PST" duration-ms="322" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:50 PST" name="setup" finished-at="2025-01-28T10:59:51 PST" duration-ms="515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TC10UpdateExistingUserWithStatusMoreThan200Char()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:51 PST" name="TC10UpdateExistingUserWithStatusMoreThan200Char" finished-at="2025-01-28T10:59:51 PST" duration-ms="396" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC10UpdateExistingUserWithStatusMoreThan200Char -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPIUpdateUserTests@609cd4d8]" started-at="2025-01-28T10:59:51 PST" name="deleteUser" finished-at="2025-01-28T10:59:52 PST" duration-ms="359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
      </class> <!-- Tests.GoRestAPIUpdateUserTests -->
      <class name="Tests.GoRestAPICreateUserTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:20 PST" name="setup" finished-at="2025-01-28T10:59:20 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TC01CreateAndVerifyUser()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:20 PST" name="TC01CreateAndVerifyUser" finished-at="2025-01-28T10:59:21 PST" duration-ms="992" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC01CreateAndVerifyUser -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:21 PST" name="deleteUser" finished-at="2025-01-28T10:59:21 PST" duration-ms="558" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method signature="TC02CreateUserWithInvalidEmail()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:21 PST" name="TC02CreateUserWithInvalidEmail" finished-at="2025-01-28T10:59:21 PST" duration-ms="343" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC02CreateUserWithInvalidEmail -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:21 PST" name="setup" finished-at="2025-01-28T10:59:21 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:21 PST" name="deleteUser" finished-at="2025-01-28T10:59:22 PST" duration-ms="478" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method signature="TC03CreateUserWithInvalidStatus()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:22 PST" name="TC03CreateUserWithInvalidStatus" finished-at="2025-01-28T10:59:22 PST" duration-ms="474" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC03CreateUserWithInvalidStatus -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:22 PST" name="setup" finished-at="2025-01-28T10:59:22 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:22 PST" name="deleteUser" finished-at="2025-01-28T10:59:23 PST" duration-ms="469" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method signature="TC04CreateUserWithInvalidGender()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:23 PST" name="TC04CreateUserWithInvalidGender" finished-at="2025-01-28T10:59:23 PST" duration-ms="491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC04CreateUserWithInvalidGender -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:23 PST" name="setup" finished-at="2025-01-28T10:59:23 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:23 PST" name="deleteUser" finished-at="2025-01-28T10:59:24 PST" duration-ms="471" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:24 PST" name="setup" finished-at="2025-01-28T10:59:24 PST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TC05CreateUserWithBlankEmail()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:24 PST" name="TC05CreateUserWithBlankEmail" finished-at="2025-01-28T10:59:24 PST" duration-ms="497" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC05CreateUserWithBlankEmail -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:24 PST" name="deleteUser" finished-at="2025-01-28T10:59:25 PST" duration-ms="499" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method signature="TC06CreateUserWithBlankStatus()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:25 PST" name="TC06CreateUserWithBlankStatus" finished-at="2025-01-28T10:59:25 PST" duration-ms="328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC06CreateUserWithBlankStatus -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:25 PST" name="setup" finished-at="2025-01-28T10:59:25 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:25 PST" name="deleteUser" finished-at="2025-01-28T10:59:25 PST" duration-ms="308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method signature="TC07CreateUserWithBlankGender()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:25 PST" name="TC07CreateUserWithBlankGender" finished-at="2025-01-28T10:59:26 PST" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC07CreateUserWithBlankGender -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:25 PST" name="setup" finished-at="2025-01-28T10:59:25 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:26 PST" name="deleteUser" finished-at="2025-01-28T10:59:26 PST" duration-ms="469" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method signature="TC08CreateUserWithBlankName()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:26 PST" name="TC08CreateUserWithBlankName" finished-at="2025-01-28T10:59:27 PST" duration-ms="475" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC08CreateUserWithBlankName -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:26 PST" name="setup" finished-at="2025-01-28T10:59:26 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:27 PST" name="deleteUser" finished-at="2025-01-28T10:59:27 PST" duration-ms="468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method signature="TC09CreateUserWithMissingRequiredFields()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:27 PST" name="TC09CreateUserWithMissingRequiredFields" finished-at="2025-01-28T10:59:28 PST" duration-ms="320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC09CreateUserWithMissingRequiredFields -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:27 PST" name="setup" finished-at="2025-01-28T10:59:27 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:28 PST" name="deleteUser" finished-at="2025-01-28T10:59:28 PST" duration-ms="474" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method signature="TC10CreateUserWithInvalidToken()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:28 PST" name="TC10CreateUserWithInvalidToken" finished-at="2025-01-28T10:59:29 PST" duration-ms="439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC10CreateUserWithInvalidToken -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:28 PST" name="setup" finished-at="2025-01-28T10:59:28 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:29 PST" name="deleteUser" finished-at="2025-01-28T10:59:29 PST" duration-ms="312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method signature="TC11CreateUserWithUnauthorizedUser()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:29 PST" name="TC11CreateUserWithUnauthorizedUser" finished-at="2025-01-28T10:59:29 PST" duration-ms="467" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC11CreateUserWithUnauthorizedUser -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:29 PST" name="setup" finished-at="2025-01-28T10:59:29 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:29 PST" name="deleteUser" finished-at="2025-01-28T10:59:30 PST" duration-ms="449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method signature="TC12CreateUserWithNameMoreThan200Char()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:30 PST" name="TC12CreateUserWithNameMoreThan200Char" finished-at="2025-01-28T10:59:30 PST" duration-ms="485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC12CreateUserWithNameMoreThan200Char -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:30 PST" name="setup" finished-at="2025-01-28T10:59:30 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:30 PST" name="deleteUser" finished-at="2025-01-28T10:59:31 PST" duration-ms="484" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method signature="TC13CreateUserWithEmailMoreThan200Char()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:31 PST" name="TC13CreateUserWithEmailMoreThan200Char" finished-at="2025-01-28T10:59:31 PST" duration-ms="477" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC13CreateUserWithEmailMoreThan200Char -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:31 PST" name="setup" finished-at="2025-01-28T10:59:31 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:31 PST" name="deleteUser" finished-at="2025-01-28T10:59:32 PST" duration-ms="491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method signature="TC14CreateUserWithGenderMoreThan200Char()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:32 PST" name="TC14CreateUserWithGenderMoreThan200Char" finished-at="2025-01-28T10:59:32 PST" duration-ms="485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC14CreateUserWithGenderMoreThan200Char -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:32 PST" name="setup" finished-at="2025-01-28T10:59:32 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:32 PST" name="deleteUser" finished-at="2025-01-28T10:59:33 PST" duration-ms="449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:33 PST" name="setup" finished-at="2025-01-28T10:59:33 PST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="TC15CreateUserWithStatusMoreThan200Char()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:33 PST" name="TC15CreateUserWithStatusMoreThan200Char" finished-at="2025-01-28T10:59:33 PST" duration-ms="490" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC15CreateUserWithStatusMoreThan200Char -->
        <test-method is-config="true" signature="deleteUser()[pri:0, instance:Tests.GoRestAPICreateUserTests@66d18979]" started-at="2025-01-28T10:59:33 PST" name="deleteUser" finished-at="2025-01-28T10:59:34 PST" duration-ms="335" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
      </class> <!-- Tests.GoRestAPICreateUserTests -->
    </test> <!-- GoRest API Tests -->
  </suite> <!-- Go Rest API Suite -->
</testng-results>
